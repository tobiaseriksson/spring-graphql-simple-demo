type SupportCase {
    id: ID!
    priority: String!
    title: String!
    text: String!
    logMessages: [LogMessage]
}

type LogMessage {
    id: ID!
    txt: String
}

type Query {
    # This will return ALL the Support Cases there are
    allSupportCases: [SupportCase]
    # This will return a subset of the Support Cases based on title contains
    # and/or the limit parameter
    someSupportCases( titleContains: String, limit: Int): [SupportCase]
}

input LogMessageInput {
    belongToCase: ID!
    txt: String
}

type Mutation {
    # Add a Log Message to a particular Support Case
    addLogMessage( logMessage: LogMessageInput! ) : LogMessage
}
